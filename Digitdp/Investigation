#include <bits/stdc++.h>
using namespace std;
 
 
typedef long long ll;
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef long double ld;
 
typedef set<int>::iterator sit;
typedef map<int,int>::iterator mit;
typedef vector<int>::iterator vit;
 
const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;
const int MAXN = 1e6 + 3;
 
#define _  %  MOD
#define __ %= MOD
 
#define      each(it,s)        for(auto it = s.begin(); it != s.end(); ++it)
#define      sortA(v)          sort(v.begin(), v.end())
#define      sortD(v)          sort(v.begin(), v.end(), greater<auto>())
#define      fill(a)           memset(a, 0, sizeof (a))
 
#define      swap(a,b)        {a=a+b;b=a-b;a=a-b;}
#define      rep(i, n)         for(ll i = 0; i < (n); ++i)
#define      repA(i, a, n)     for(ll i = a; i <= (n); ++i)
#define      repD(i, a, n)     for(ll i = a; i >= (n); --i)
#define watch(x) cout << (#x) << " is " << (x) <<endl
 
#define fi first
#define se second
#define mp make_pair
#define pb push_back
 
#define fbo find_by_order
#define ook order_of_key
 
ll gcd(ll a,ll b){if(b==0) return a; else return gcd(b,a%b);}
ll power(ll x,ll y){ll res=1; while(y>0){if(y&1) res=res*x;y=y>>1;x=x*x;}return res;} // modular exponent
ll a,b,k;
string bs,as;
ll dp1[15][2][100][100];
ll dp2[15][2][100][100];
ll f1(ll pos,ll flag,ll sum,ll rem)
{
	//if(sum<k) return 0; // check whether this should be placed or not
	if(pos==bs.length())
	{
		if(sum%k==0 && rem==0) return 1;
		else return 0;
	}
	if(dp1[pos][flag][sum][rem]!=-1) return dp1[pos][flag][sum][rem];
	ll ans=0;
	char lmt;
	if(flag==0) lmt=bs[pos];
	else
	{
		lmt='9';
	}
	for(char ch='0';ch<=lmt;ch++)
	{
		ll newflag;
		ll remnew=(rem*10+(ch-'0'))%k;
		ll sumnew=sum+(ch-'0');
		if(flag==0 && ch<lmt)
		{
			newflag=1;	
		}
		else if(flag==0 && ch==lmt)
		{
			newflag=0;
		}
		else if(flag==1)
		{
			newflag=1;
		}
		ans+=f1(pos+1,newflag,sumnew,remnew);
	}
	return dp1[pos][flag][sum][rem]=ans;
}
void solve()
{
	cin>>a>>b>>k;
	a--;
	bs="";
	as="";
	if(a==0) as+='0';
	while(a)
	{
		char ch='0'+a%10;
		as+=ch;
		a/=10;
	}
	while(b)
	{
		char ch='0'+b%10;
		bs+=ch;
		b/=10;
	}
	reverse(as.begin(),as.end());reverse(bs.begin(),bs.end());
	if(k>=100)
	{
		cout<<0<<'\n';
		return ;
	}
	ll ans;
	memset(dp1,-1,sizeof(dp1));
	ans=f1(0,0,0,0);
	memset(dp1,-1,sizeof(dp1));
	bs=as;
	ans-=f1(0,0,0,0);
	cout<<ans<<'\n';
	return;
}
int main()
{
    ios_base::sync_with_stdio(false); // don't use printf and scanf
    cin.tie(NULL); // cout<<fixed<<setprecision
	int t;
	cin>>t;
	for(int i=1;i<=t;i++)
	{
		cout<<"Case "<<i<<": ";
		solve();
	}	
	return 0;
}
// JUST ASK YOURSELF DID YOU GIVE YOUR BEST ? ISSE ZYADA
// KUCH KAR BHI NAHI SAKTE !! ENJOY AND GIVE YOUR BEST!!

